{"version":3,"sources":["logo.svg","SplitTest.js","LDTest.js","App.js","reportWebVitals.js","index.js"],"names":["SplitTest","event","React","useState","splitClient","setSplitClient","eventFeatureEnabled","setEventFeatureEnabled","useEffect","client","SplitFactory","core","authorizationKey","key","trafficType","startup","readyTimeout","on","Event","SDK_READY","getTreatment","account","email","style","border","margin","LDTest","ldClient","setLdClient","accountFeatureEnabled","setAccountFeatureEnabled","user","name","custom","eventId","accountId","LDClient","variation","events","App","setEvent","className","src","logo","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,iC,uBCiD1BA,EA5CG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEnB,EAAsCC,IAAMC,SAAS,MAArD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsDH,IAAMC,UAAS,GAArE,mBAAOG,EAAP,KAA4BC,EAA5B,KAgCA,OA9BEL,IAAMM,WAAU,WACZ,IAWMC,EAXUC,YAAa,CAC3BC,KAAM,CACJC,iBAAkB,uCAClBC,IAAKZ,EACLa,YAAa,SAEfC,QAAS,CACPC,aAAc,OAIKP,SAEvBA,EAAOQ,GAAGR,EAAOS,MAAMC,WAAW,WAChCd,EAAeI,QAEhB,CAACR,IAEJC,IAAMM,WAAU,WAOdD,EAAuBH,GAAeA,EAAYgB,aAAa,eAN5C,CACjBC,QAAS,SACTC,MAAO,oBACPrB,MAAO,WAKR,CAACA,IAED,sBAAKsB,MAAO,CAAEC,OAAQ,kBAAmBC,OAAQ,QAAjD,UACL,uDACA,oDACiB,uCAAWnB,EAAsB,KAAO,MAAxC,OADjB,gBACyFL,S,QCJ9EyB,EAnCA,SAAC,GAAe,IAAbzB,EAAY,EAAZA,MAEhB,EAAgCC,IAAMC,SAAS,MAA/C,mBAAOwB,EAAP,KAAiBC,EAAjB,KACA,EAA0D1B,IAAMC,UAAS,GAAzE,mBAAO0B,EAAP,KAA8BC,EAA9B,KAuBA,OArBA5B,IAAMM,WAAU,WACd,IAAMuB,EAAO,CACXlB,IAAKZ,EACL+B,KAAK,WAAD,OAAa/B,GACjBqB,MAAM,GAAD,OAAKrB,EAAL,gBACLgC,OAAQ,CACJC,QAASjC,EACTkC,UAAU,GAAD,OAAKlC,EAAL,SAGTQ,EAAS2B,IAAoB,2BAA4BL,GAE/DtB,EAAOQ,GAAG,SAAS,WACjBW,EAAYnB,QAEb,CAACR,IAEJC,IAAMM,WAAU,WACdsB,EAAyBH,GAAYA,EAASU,UAAU,kBACvD,CAACV,IAEG,sBAAKJ,MAAO,CAAEC,OAAQ,kBAAmBC,OAAQ,QAAjD,UACL,2DACA,kDACiB,uCAAUI,EAAwB,KAAO,MAAzC,OADjB,eACwF5B,SCxBtFqC,EACC,MADDA,EAEC,MAFDA,EAGC,MA8CQC,MA3Cf,WAEE,MAA0BrC,IAAMC,SAASmC,GAAzC,mBAAOrC,EAAP,KAAcuC,EAAd,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,WAG3C,gCACE,yBACEC,QAAS,kBAAML,EAASF,IAD1B,mBAESA,KAET,yBACEO,QAAS,kBAAML,EAASF,IAD1B,mBAESA,KAET,yBACEO,QAAS,kBAAML,EAASF,IAD1B,mBAESA,KAET,4CACYrC,KAEZ,8CACcA,EADd,SAGA,0CACUA,EADV,qBAOF,cAAC,EAAD,CAAWA,MAAOA,IAClB,cAAC,EAAD,CAAkBA,MAAOA,QCxChB6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a83e1c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n\nimport { SplitFactory } from '@splitsoftware/splitio';\n\n\nconst SplitTest = ({ event }) => {\n\n  const [splitClient, setSplitClient] = React.useState(null);\n  const [eventFeatureEnabled, setEventFeatureEnabled] = React.useState(false);\n\n    React.useEffect(() => {\n        const factory = SplitFactory({ \n          core: {\n            authorizationKey: 'in9qidn1upmnq6bi8ffums1tm5lakagp8jn0',\n            key: event,\n            trafficType: 'event'\n          },\n          startup: {\n            readyTimeout: 1.5\n          }\n        });\n        \n        const client = factory.client();\n    \n        client.on(client.Event.SDK_READY, () => {\n          setSplitClient(client);\n        });\n      }, [event]);\n    \n      React.useEffect(() => {\n        const userObject = {\n          account: '123456',\n          email: 'gilad@bizzabo.com',\n          event: '456'\n        };\n    \n        setEventFeatureEnabled(splitClient && splitClient.getTreatment('eventFeature', userObject));\n    \n      }, [event]);\n\n  return <div style={{ border: '1px solid black', margin: '50px' }}>\n    <h1>This is from Split.io</h1>\n    <div>\n    eventFeature is: <strong> { eventFeatureEnabled ? 'on' : 'off' } </strong>  for event: { event }\n    </div>\n  </div>;\n};\n\n\nexport default SplitTest;","import React from 'react';\n\nimport * as LDClient from \"launchdarkly-js-client-sdk\";\n\nconst LDTest = ({ event }) => {\n\n  const [ldClient, setLdClient] = React.useState(null);\n  const [accountFeatureEnabled, setAccountFeatureEnabled] = React.useState(false);\n\n  React.useEffect(() => {\n    const user = {\n      key: event,\n      name: `user in:${event}`,\n      email: `${event}@bizzabo.com`,\n      custom: {\n          eventId: event,\n          accountId: `${event}000`,\n      }\n    };\n    const client = LDClient.initialize('60be2087cafd2b0e04da8ce4', user);\n    \n    client.on('ready', function () {\n      setLdClient(client);\n    });\n  }, [event]);\n    \n  React.useEffect(() => {\n    setAccountFeatureEnabled(ldClient && ldClient.variation('new-feature'));\n  }, [ldClient]);\n\n  return <div style={{ border: '1px solid black', margin: '50px' }}>\n    <h1>This is from LaunchDarkly</h1>\n    <div>\n      newFeature is: <strong> {accountFeatureEnabled ? 'on' : 'off'} </strong> for event: { event }\n    </div>\n  </div>;\n};\n\n\nexport default LDTest;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// import RoxTest from './RoxTest';\n// import FlagsmithTest from './FlagsmithTest';\nimport SplitTest from './SplitTest';\nimport LaunchDarklyTest from './LDTest';\n\nconst events = {\n  123: '123',\n  456: '456',\n  789: '789'\n}\n\nfunction App() {\n\n  const [event, setEvent] = React.useState(events[123]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n\n      <nav>\n        <button\n          onClick={() => setEvent(events[123])}>\n          Event {events[123]}\n        </button> \n        <button\n          onClick={() => setEvent(events[456])}>\n          Event {events[456]}\n        </button> \n        <button\n          onClick={() => setEvent(events[789])}>\n          Event {events[789]}\n        </button>\n        <div>\n          eventId: {event}\n        </div>\n        <div>\n          accountId: {event}000\n        </div>\n        <div>\n          email: {event}@bizzabo.com\n        </div>\n      </nav>\n\n      {/* <RoxTest />      \n      <FlagsmithTest /> */}\n      <SplitTest event={event} />\n      <LaunchDarklyTest event={event} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}